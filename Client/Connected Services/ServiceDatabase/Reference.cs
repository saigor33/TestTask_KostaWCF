//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceDatabase {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceDatabase.IDataBase_Kosta")]
    public interface IDataBase_Kosta {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBase_Kosta/GetEmployees", ReplyAction="http://tempuri.org/IDataBase_Kosta/GetEmployeesResponse")]
        TestTaskKost_WCF.Employee[] GetEmployees(string firstNameSearch, string lastNameSearch, string patronymucSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBase_Kosta/GetEmployees", ReplyAction="http://tempuri.org/IDataBase_Kosta/GetEmployeesResponse")]
        System.Threading.Tasks.Task<TestTaskKost_WCF.Employee[]> GetEmployeesAsync(string firstNameSearch, string lastNameSearch, string patronymucSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBase_Kosta/SetEmployees", ReplyAction="http://tempuri.org/IDataBase_Kosta/SetEmployeesResponse")]
        string SetEmployees(string firstNameSearch, string lastNameSearch, string patronymuc, System.DateTime biarchDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBase_Kosta/SetEmployees", ReplyAction="http://tempuri.org/IDataBase_Kosta/SetEmployeesResponse")]
        System.Threading.Tasks.Task<string> SetEmployeesAsync(string firstNameSearch, string lastNameSearch, string patronymuc, System.DateTime biarchDay);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataBase_KostaChannel : Client.ServiceDatabase.IDataBase_Kosta, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataBase_KostaClient : System.ServiceModel.ClientBase<Client.ServiceDatabase.IDataBase_Kosta>, Client.ServiceDatabase.IDataBase_Kosta {
        
        public DataBase_KostaClient() {
        }
        
        public DataBase_KostaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataBase_KostaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataBase_KostaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataBase_KostaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestTaskKost_WCF.Employee[] GetEmployees(string firstNameSearch, string lastNameSearch, string patronymucSearch) {
            return base.Channel.GetEmployees(firstNameSearch, lastNameSearch, patronymucSearch);
        }
        
        public System.Threading.Tasks.Task<TestTaskKost_WCF.Employee[]> GetEmployeesAsync(string firstNameSearch, string lastNameSearch, string patronymucSearch) {
            return base.Channel.GetEmployeesAsync(firstNameSearch, lastNameSearch, patronymucSearch);
        }
        
        public string SetEmployees(string firstNameSearch, string lastNameSearch, string patronymuc, System.DateTime biarchDay) {
            return base.Channel.SetEmployees(firstNameSearch, lastNameSearch, patronymuc, biarchDay);
        }
        
        public System.Threading.Tasks.Task<string> SetEmployeesAsync(string firstNameSearch, string lastNameSearch, string patronymuc, System.DateTime biarchDay) {
            return base.Channel.SetEmployeesAsync(firstNameSearch, lastNameSearch, patronymuc, biarchDay);
        }
    }
}
